{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["const userAgent = typeof window !== 'undefined' ? window.navigator.userAgent : 'no-window';\nconst isBot = /bot|crawler|spider|crawling/i.test(userAgent);\n\nexport class ServerStream {\n\n    constructor(opts = {}) {\n        const {\n            method = 'PUT',\n            url = '/log',\n            throttleInterval = 3000,\n            withCredentials = false,\n            onError,\n            flushOnClose = false,\n            writeCondition = ServerStream.defaultWriteCondition,\n        } = opts;\n\n        this.writeCondition = writeCondition;\n        this.records = {};\n\n        this.start({ method, url, throttleInterval, withCredentials, onError });\n\n        if (flushOnClose && typeof window.fetch !== 'undefined') {\n            // TODO: look at page visibility api here\n            // https://github.com/GoogleChromeLabs/page-lifecycle\n            window.addEventListener('beforeunload', () => {\n                if (this.currentThrottleTimeout) {\n                    window.clearTimeout(this.currentThrottleTimeout);\n                }\n                const recs = this.recordsAsArray();\n                if (recs.length) {\n                    // swapped sendBeacon for fetch as discussed here:\n                    // https://stackoverflow.com/questions/55421459/http-request-beforeunload-sendbeacon-vs-img-src\n                    window.fetch(url, {\n                        method,\n                        body: JSON.stringify(recs),\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        credentials: withCredentials ? 'include' : 'same-origin',\n                        mode: 'cors',\n                        keepalive: true,\n                    });\n                }\n            }, false);\n        }\n    }\n\n    start({ method, url, throttleInterval, withCredentials, onError }) {\n        const throttleRequests = () => {\n            // wait for any errors to accumulate\n            this.currentThrottleTimeout = setTimeout(() => {\n                const recs = this.recordsAsArray();\n                if (recs.length) {\n                    const xhr = new XMLHttpRequest();\n                    xhr.onreadystatechange = () => {\n                        if (xhr.readyState === XMLHttpRequest.DONE) {\n                            if (xhr.status >= 400) {\n                                if (typeof onError === 'function') {\n                                    onError.call(this, recs, xhr);\n                                } else {\n                                    console.warn('Browser Bunyan: A server log write failed');\n                                }\n                            }\n                            this.records = {};\n                            throttleRequests();\n                        }\n                    };\n                    xhr.open(method, url);\n                    xhr.setRequestHeader('Content-Type', 'application/json');\n                    xhr.withCredentials = withCredentials;\n                    xhr.send(JSON.stringify(recs));\n                } else {\n                    throttleRequests();\n                }\n            }, throttleInterval);\n        };\n\n        throttleRequests();\n    }\n\n    stop() {\n        setTimeout(() => {\n            if (this.currentThrottleTimeout) {\n                clearTimeout(this.currentThrottleTimeout);\n                this.currentThrottleTimeout = null;\n            }\n        }, 1);\n    }\n\n    write(rec) {\n        rec.url = typeof window !== 'undefined' && window.location.href;\n        rec.userAgent = userAgent;\n        if (this.currentThrottleTimeout && this.writeCondition(rec)) {\n            if (this.records[rec.msg]) {\n                this.records[rec.msg].count++;\n            } else {\n                rec.count = 1;\n                this.records[rec.msg] = rec;\n            }\n        }\n    }\n\n    recordsAsArray() {\n        return Object.keys(this.records).map(errKey => this.records[errKey]);\n    }\n\n    static defaultWriteCondition() {\n        return window.navigator.onLine && !isBot;\n    }\n}\n"],"names":["userAgent","window","navigator","isBot","test","opts","method","url","throttleInterval","withCredentials","onError","flushOnClose","writeCondition","this","ServerStream","defaultWriteCondition","records","start","fetch","addEventListener","_this","currentThrottleTimeout","clearTimeout","recs","recordsAsArray","length","body","JSON","stringify","headers","credentials","mode","keepalive","throttleRequests","_this2","setTimeout","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","call","console","warn","open","setRequestHeader","send","stop","_this3","write","rec","location","href","msg","count","Object","keys","map","errKey","_this4","onLine"],"mappings":"AAAA,IAAMA,EAA8B,oBAAXC,OAAyBA,OAAOC,UAAUF,UAAY,YACzEG,EAAQ,+BAA+BC,KAAKJ,gDAI9C,WAAYK,uBAAAA,IAAAA,EAAO,IACf,MAQIA,EAPAC,OAAAA,aAAS,UAOTD,EANAE,IAAAA,aAAM,WAMNF,EALAG,iBAAAA,aAAmB,QAKnBH,EAJAI,gBAAAA,gBACAC,EAGAL,EAHAK,UAGAL,EAFAM,aAAAA,kBAEAN,EADAO,eAGJC,KAAKD,0BAHgBE,EAAaC,wBAIlCF,KAAKG,QAAU,GAEfH,KAAKI,MAAM,CAAEX,OAAAA,EAAQC,IAAAA,EAAKC,iBAAAA,EAAkBC,gBAAAA,EAAiBC,QAAAA,IAEzDC,QAAwC,IAAjBV,OAAOiB,OAG9BjB,OAAOkB,iBAAiB,eAAgB,WAChCC,EAAKC,wBACLpB,OAAOqB,aAAaF,EAAKC,wBAE7B,IAAME,EAAOH,EAAKI,iBACdD,EAAKE,QAGLxB,OAAOiB,MAAMX,EAAK,CACdD,OAAAA,EACAoB,KAAMC,KAAKC,UAAUL,GACrBM,QAAS,CACL,eAAgB,oBAEpBC,YAAarB,EAAkB,UAAY,cAC3CsB,KAAM,OACNC,WAAW,MAGpB,GAxCf,2BA4CIf,MAAA,uBAAQX,IAAAA,OAAQC,IAAAA,IAAKC,IAAAA,iBAAkBC,IAAAA,gBAAiBC,IAAAA,SAC3B,SAAnBuB,IAEFC,EAAKb,uBAAyBc,WAAW,WACrC,IAAMZ,EAAOW,EAAKV,iBAClB,GAAID,EAAKE,OAAQ,CACb,IAAMW,EAAM,IAAIC,eAChBD,EAAIE,mBAAqB,WACjBF,EAAIG,aAAeF,eAAeG,OAC9BJ,EAAIK,QAAU,MACS,mBAAZ/B,EACPA,EAAQgC,KAAKR,EAAMX,EAAMa,GAEzBO,QAAQC,KAAK,8CAGrBV,EAAKlB,QAAU,GACfiB,MAGRG,EAAIS,KAAKvC,EAAQC,GACjB6B,EAAIU,iBAAiB,eAAgB,oBACrCV,EAAI3B,gBAAkBA,EACtB2B,EAAIW,KAAKpB,KAAKC,UAAUL,SAExBU,KAELzB,GAGPyB,MAGJe,KAAA,sBACIb,WAAW,WACHc,EAAK5B,yBACLC,aAAa2B,EAAK5B,wBAClB4B,EAAK5B,uBAAyB,OAEnC,MAGP6B,MAAA,SAAMC,GACFA,EAAI5C,IAAwB,oBAAXN,QAA0BA,OAAOmD,SAASC,KAC3DF,EAAInD,UAAYA,EACZa,KAAKQ,wBAA0BR,KAAKD,eAAeuC,KAC/CtC,KAAKG,QAAQmC,EAAIG,KACjBzC,KAAKG,QAAQmC,EAAIG,KAAKC,SAEtBJ,EAAII,MAAQ,EACZ1C,KAAKG,QAAQmC,EAAIG,KAAOH,OAKpC3B,eAAA,sBACI,OAAOgC,OAAOC,KAAK5C,KAAKG,SAAS0C,IAAI,SAAAC,UAAUC,EAAK5C,QAAQ2C,QAGzD5C,sBAAP,WACI,OAAOd,OAAOC,UAAU2D,SAAW1D"}